// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using StudyApp.Models;

#nullable disable

namespace StudyApp.Migrations
{
    [DbContext(typeof(StudyBuddyContext))]
    partial class StudyBuddyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseProfile", b =>
                {
                    b.Property<int>("AspiringStudentsProfileId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("DesiredCoursesCourseId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("AspiringStudentsProfileId", "DesiredCoursesCourseId");

                    b.HasIndex("DesiredCoursesCourseId");

                    b.ToTable("CourseProfile");
                });

            modelBuilder.Entity("CourseProfile1", b =>
                {
                    b.Property<int>("CurrentCoursesCourseId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("CurrentStudentsProfileId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("CurrentCoursesCourseId", "CurrentStudentsProfileId");

                    b.HasIndex("CurrentStudentsProfileId");

                    b.ToTable("CourseProfile1");
                });

            modelBuilder.Entity("EventProfile", b =>
                {
                    b.Property<int>("AttendeesProfileId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("AttendingEventsEventId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("AttendeesProfileId", "AttendingEventsEventId");

                    b.HasIndex("AttendingEventsEventId");

                    b.ToTable("EventProfile");
                });

            modelBuilder.Entity("HobbyProfile", b =>
                {
                    b.Property<int>("HobbiesHobbyId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("InterestedPeopleProfileId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("HobbiesHobbyId", "InterestedPeopleProfileId");

                    b.HasIndex("InterestedPeopleProfileId");

                    b.ToTable("HobbyProfile");
                });

            modelBuilder.Entity("ProfileSchool", b =>
                {
                    b.Property<int>("AlumnaeProfileId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PreviousSchoolsSchoolId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("AlumnaeProfileId", "PreviousSchoolsSchoolId");

                    b.HasIndex("PreviousSchoolsSchoolId");

                    b.ToTable("ProfileSchool");
                });

            modelBuilder.Entity("StudyApp.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("CourseId");

                    b.ToTable("StudyBuddy_Courses");
                });

            modelBuilder.Entity("StudyApp.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<DateTimeOffset>("DateOfDay")
                        .HasColumnType("TIMESTAMP(7) WITH TIME ZONE");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("RelatedCourseCourseId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("RelatedProgramProgramOfStudyId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("RelatedSchoolSchoolId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<TimeSpan>("TimeOfDay")
                        .HasColumnType("INTERVAL DAY(8) TO SECOND(7)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("EventId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("RelatedCourseCourseId");

                    b.HasIndex("RelatedProgramProgramOfStudyId");

                    b.HasIndex("RelatedSchoolSchoolId");

                    b.ToTable("StudyBuddy_Events");
                });

            modelBuilder.Entity("StudyApp.Models.Hobby", b =>
                {
                    b.Property<int>("HobbyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HobbyId"));

                    b.Property<string>("HobbyName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("HobbyId");

                    b.ToTable("StudyBuddy_Hobbies");
                });

            modelBuilder.Entity("StudyApp.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("Read")
                        .HasColumnType("NUMBER(1)");

                    b.Property<int>("RecipientProfileId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("SenderProfileId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("MessageId");

                    b.HasIndex("RecipientProfileId");

                    b.HasIndex("SenderProfileId");

                    b.ToTable("StudyBuddy_Messages");
                });

            modelBuilder.Entity("StudyApp.Models.Profile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileId"));

                    b.Property<int?>("Age")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Biography")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("CurrentProgramProgramOfStudyId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("CurrentSchoolSchoolId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Pronouns")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ProfileId");

                    b.HasIndex("CurrentProgramProgramOfStudyId");

                    b.HasIndex("CurrentSchoolSchoolId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("StudyBuddy_Profiles");
                });

            modelBuilder.Entity("StudyApp.Models.ProgramOfStudy", b =>
                {
                    b.Property<int>("ProgramOfStudyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramOfStudyId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("ProgramOfStudyId");

                    b.ToTable("StudyBuddy_Programs");
                });

            modelBuilder.Entity("StudyApp.Models.School", b =>
                {
                    b.Property<int>("SchoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SchoolId"));

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("SchoolId");

                    b.ToTable("StudyBuddy_Schools");
                });

            modelBuilder.Entity("StudyApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Psswd")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("UserId");

                    b.ToTable("StudyBuddy_Users");
                });

            modelBuilder.Entity("CourseProfile", b =>
                {
                    b.HasOne("StudyApp.Models.Profile", null)
                        .WithMany()
                        .HasForeignKey("AspiringStudentsProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyApp.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("DesiredCoursesCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseProfile1", b =>
                {
                    b.HasOne("StudyApp.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CurrentCoursesCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyApp.Models.Profile", null)
                        .WithMany()
                        .HasForeignKey("CurrentStudentsProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EventProfile", b =>
                {
                    b.HasOne("StudyApp.Models.Profile", null)
                        .WithMany()
                        .HasForeignKey("AttendeesProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyApp.Models.Event", null)
                        .WithMany()
                        .HasForeignKey("AttendingEventsEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HobbyProfile", b =>
                {
                    b.HasOne("StudyApp.Models.Hobby", null)
                        .WithMany()
                        .HasForeignKey("HobbiesHobbyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyApp.Models.Profile", null)
                        .WithMany()
                        .HasForeignKey("InterestedPeopleProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProfileSchool", b =>
                {
                    b.HasOne("StudyApp.Models.Profile", null)
                        .WithMany()
                        .HasForeignKey("AlumnaeProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyApp.Models.School", null)
                        .WithMany()
                        .HasForeignKey("PreviousSchoolsSchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudyApp.Models.Event", b =>
                {
                    b.HasOne("StudyApp.Models.Profile", "Owner")
                        .WithMany("HostedEvents")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyApp.Models.Course", "RelatedCourse")
                        .WithMany("Events")
                        .HasForeignKey("RelatedCourseCourseId");

                    b.HasOne("StudyApp.Models.ProgramOfStudy", "RelatedProgram")
                        .WithMany("Events")
                        .HasForeignKey("RelatedProgramProgramOfStudyId");

                    b.HasOne("StudyApp.Models.School", "RelatedSchool")
                        .WithMany("Events")
                        .HasForeignKey("RelatedSchoolSchoolId");

                    b.Navigation("Owner");

                    b.Navigation("RelatedCourse");

                    b.Navigation("RelatedProgram");

                    b.Navigation("RelatedSchool");
                });

            modelBuilder.Entity("StudyApp.Models.Message", b =>
                {
                    b.HasOne("StudyApp.Models.Profile", "Recipient")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("RecipientProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyApp.Models.Profile", "Sender")
                        .WithMany("SentMessages")
                        .HasForeignKey("SenderProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipient");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("StudyApp.Models.Profile", b =>
                {
                    b.HasOne("StudyApp.Models.ProgramOfStudy", "CurrentProgram")
                        .WithMany("Students")
                        .HasForeignKey("CurrentProgramProgramOfStudyId");

                    b.HasOne("StudyApp.Models.School", "CurrentSchool")
                        .WithMany("Students")
                        .HasForeignKey("CurrentSchoolSchoolId");

                    b.HasOne("StudyApp.Models.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("StudyApp.Models.Profile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentProgram");

                    b.Navigation("CurrentSchool");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudyApp.Models.Course", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("StudyApp.Models.Profile", b =>
                {
                    b.Navigation("HostedEvents");

                    b.Navigation("ReceivedMessages");

                    b.Navigation("SentMessages");
                });

            modelBuilder.Entity("StudyApp.Models.ProgramOfStudy", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("StudyApp.Models.School", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("StudyApp.Models.User", b =>
                {
                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
